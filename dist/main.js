(()=>{"use strict";var e={n:t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{formatAirportData:()=>q});const r=require("express");var n=e.n(r);const o=require("http");var a=e.n(o);const s=require("cors");var i=e.n(s);require("dotenv/config");const c={mongoose:{url:`${process.env.MONGO_URL}${process.env.DB_NAME}`},environment:process.env.ENVIRONMENT,port:process.env.PORT,rapidApi:{key:process.env.RAPID_API_KEY,host:process.env.RAPID_API_HOST},newsDataApi:{key:process.env.NEWS_DATA_API_KEY}},l=require("winston");var u=e.n(l);const d=u().format((e=>(e instanceof Error&&Object.assign(e,{message:e.stack}),e))),y=(u().format.combine(u().format.colorize(),u().format.timestamp(),u().format.align(),u().format.printf((e=>`${JSON.stringify(e)}`))),u().createLogger({level:"development"===c.environment?"debug":"info",format:u().format.combine(d(),"development"===c.environment?u().format.colorize():u().format.uncolorize(),u().format.prettyPrint(),u().format.splat(),u().format.json(),u().format.printf((({level:e,message:t})=>`${e}: ${"object"==typeof t?JSON.stringify(t):t}`))),transports:[new(u().transports.Console)({stderrLevels:["error","info"]})]})),p=(require("cheerio"),require("mongoose"));var S=e.n(p);const m=new(S().Schema)({searchKeyword:{type:String,require:!0},title:{type:String,unique:!0,maxLength:1024},content:{type:String,maxLength:1024},url:{type:String,maxLength:1024},description:{type:String,maxLength:1024},category:{type:String},language:{type:String},author:{type:String},publishedAt:{type:String},sourceName:{type:String}}),g=S().model("News",m),f=new(S().Schema)({companyCode:{type:String,require:!0,unique:!0},companyName:{type:String,require:!0,unique:!0},price:{type:Number},changePoint:{type:Number},changePercentage:{type:Number},date:{type:String}}),A=S().model("Stocks",f),v=new(S().Schema)({icao:{type:String,require:!0,unique:!0},airportName:{type:String},city:{type:String},country:{type:String},lat_long:{type:String},elevation:{type:String},runwayLength:{type:String},surface:{type:String},fuel:{type:String},fbo:{type:String},lat:{type:String},lng:{type:String}}),C=S().model("Airports",v),h=new(S().Schema)({ntsbNo:{type:String,require:!0,unique:!0},completionStatus:{type:String},eventType:{type:String},city:{type:String},state:{type:String},country:{type:String},reportNo:{type:String},nNumber:{type:String},make:{type:String},model:{type:String},highestInjuryLevel:{type:String},hasSafetyRec:{type:String},mode:{type:String},reportType:{type:String},ReportDate:{type:String}}),E=S().model("Accidents",h),R=new(S().Schema)({regNumber:{type:String,require:!0,unique:!0},serialNumber:{type:String},model:{type:String},mfrYear:{type:String},typeRegistration:{type:String},status:{type:String},certificateIssueDate:{type:String},typeEngine:{type:String},modelSCodebase8:{type:String},modelSCodebase16:{type:String},fractionalOwner:{type:String},registeredOwnerName:{type:String},registeredOwnerStreet:{type:String},registeredOwnerCity:{type:String},registeredOwnerState:{type:String},registeredOwnerZipCode:{type:String},registeredOwnerCountry:{type:String},engineManufacturer:{type:String},engineModel:{type:String},awDate:{type:String}}),N=S().model("Registrations",R),L={scheduler:{interval:"*/10 * * * *"},home_url:"https://registry.faa.gov/aircraftinquiry/Search/RecentRegistrationResult",registration_url:"https://registry.faa.gov/aircraftinquiry/Search/NNumberResult?NNumberTxt=",url_headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"},models:["FALCON 10","MYSTERE-FALCON 20-C5","MYSTERE FALCON 900","FALCON 50","MYSTERE FALCON 50","CL-600-2C10","BD-100-1A10","BD-700-1A10","BD-700-1A11","BD-100-1A10","CL-600-2B16","CL-600-2A12","CL-600-2B19","CL-600-2B16(CL-604)","CL-600-2D24","BD-700-1A10","BD-700-2A12","CL-600-2C10","CL-600-2B16(CL601-3R","CL-600-2C11","CL600-2B16 (CL601-3A","CL-600-2B16 (CL-605)","CL-600-2E25","CL-215-6B11 (CL-415)","CL-600-2B19","CL-600-2B16","525C","510","560","525A","560XL","525","550","650","525B","501","680","500","750","551","560XLS","525B","525","525C","560XLS+","560XL","680A","680A","SF50","EX18","SF50","FALCON 900 EX","MYSTERE FALCON 50EX","FALCON 2000EX","FALCON 20 F","FALCON 50EX","MYSTERE-FALCON 50","FALCON 2000EX","FALCON 2000","FALCON 900EX","MYSTERE FALCON 900","FALCON 7X","FALCON 900B","FALCON 900","MYSTERE FALCON 20","FALCON 20-F5","MYSTERE-FALCON 20-F5","FALCON 900EX EASY","FALCON 20G","FALCON 900DX","FALCON 50","FALCON 20-D","FALCON 10","MYSTERE FALCON 900","FALCON 50","MYSTERE FALCON 20-F5","FALCON 20","MYSTERE FALCON 20-C5","MYSTERE FALCON 200","MYSTERE FALCON 20-D5","FAN JET FALCON SER F","FAN JET FALCON SER E","FAN JET FALCON","MYSTERE FALCON 20","FAN JET FALCON SER D","MYSTERE FALCON 900B","EA500","EA500","500","EMB-500","EMB-500","EMB-505","EMB-545","EMB-550","EMB-505","EMB-545","EMB-545 LR","EMB-135BJ","EMB-500","EMB-550","EMB-550","ERJ 190 AR","25B","24D","35","28","24E","36A","24F","25","24B","24B-A","24C","24D-A","25C","25F","29","36","25D","55","55B","55C","24","35A","35A (C-21A)","G-IV","GIV-X (G450)","695B","GV-SP (G550)","G-V","G-1159A","840","C-20A","G-IV (G400)","G1159B","GULFSTREAM 200","G-IV (G350)","GV-SP","GIV-X (G350)","GIV-X","G-IV (G300)","GV-SP (G500)","695A","G-III","GVII-G500","GVII-G600","GVII-G500","GVI (G650ER)","GV-SP (G550)","GVII-G600","GVI","GVI (G650)","GVII-G400","GVIII-G800","GVIII-G700","GULFSTREAM 200","G150","G100","GULFSTREAM 100","695A","690D","690C","695","GA-7","G-1159A","G-1159","HAWKER 900XP","HAWKER 900XP","C90GTI","C90GTI","390","390","B200","B200","400A","400A","B200GT","B200GT","G58","G58","4000","4000","B300C","B300C","B300","B300","HAWKER 4000","HAWKER 4000","HAWKER 850XP","HAWKER 850XP","HAWKER 750","HAWKER 750","C90GT","C90GT","HAWKER 800XP","HAWKER 800XP","HS.125 SERIES 700A","DH.125-3A/RA","BH.125-400A","DH.125-400A","HS 125-3A","HS-125 SERIES F-400","HA-420","HA-420","HA-420","GULFSTREAM G280","GULFSTREAM G150","GULFSTREAM G280","GULFSTREAM 200","1125 WESTWIND ASTRA","35A","60","45","31A","35A","24D","60 XR","23","24B","55","24","24A","31","25D","25","35","C-21A","MU-2B","MU-2B-25","MU-2B-60","MU-2B-40","MU-2B-20","MU-2B-36A","MU-300","MU-2B-26","MU-2B-36","TYPE ZERO","MU-2B-26A","MU-2B-35","PC-24"]},B={scheduler:{interval:"0 11 1 * *"},sessionId:480529,mainUrl:"https://data.ntsb.gov/carol-main-public/api/Query/Main",headers:{"content-type":"application/json"},dataKeys:[{key:"NtsbNo",dbKey:"ntsbNo"},{key:"CompletionStatus",dbKey:"completionStatus"},{key:"EventType",dbKey:"eventType"},{key:"City",dbKey:"city"},{key:"State",dbKey:"state"},{key:"Country",dbKey:"country"},{key:"ReportNo",dbKey:"reportNo"},{key:"N#",dbKey:"nNumber"},{key:"VehicleMake",dbKey:"make"},{key:"VehicleModel",dbKey:"model"},{key:"HighestInjuryLevel",dbKey:"highestInjuryLevel"},{key:"HasSafetyRec",dbKey:"hasSafetyRec"},{key:"Mode",dbKey:"mode"},{key:"ReportType",dbKey:"reportType"},{key:"ReportDate",dbKey:"ReportDate"}]},O={scheduler:{interval:"0 15 * * *"},stonkApiUrl:"https://realstonks.p.rapidapi.com/",stonkApiHeaders:{"X-RapidAPI-Key":`${c.rapidApi.key}`,"X-RapidAPI-Host":"realstonks.p.rapidapi.com"},companies:[{key:"GD",name:"General Dynamic"},{key:"TXT",name:"Textron"},{key:"BDRAF",name:"Bombardier"},{key:"ERF",name:"Embraer"},{key:"DUAVF",name:"Dassault Aviation"},{key:"UP",name:"Wheels Up"},{key:"EADSF",name:"Airbus"},{key:"BA",name:"Boeing"},{key:"BP",name:"BP PLC"},{key:"NTOIF",name:"Neste OYJ"},{key:"SHEL",name:"Shell PLC"},{key:"HON",name:"Honeywell "},{key:"GE",name:"General Electric"},{key:"RYCEF",name:"Rolls-Royce"},{key:"WMB",name:"Williams International"},{key:"COL",name:"Rockwell Collins"}]},D={scheduler:{interval:"0 10,14,18 * * *"},newsDataUrl:"https://newsomaticapi.p.rapidapi.com/top",requestHeaders:{"X-RapidAPI-Key":`${c.rapidApi.key}`,"X-RapidAPI-Host":"newsomaticapi.p.rapidapi.com"},requestLanguage:"en",keywords:["private jet","business jet","private aviation","bombardier","dassault falcon","gulfstream","learjet","cessna citation","embraer legacy","embraer praetor","embraer phenom","embraer lineage","hondajet","nextant","pilatus pc-24","textron","economy","finance","market","inflation"]},w={columns:{A:"icao",B:"airportName",C:"city",D:"country",E:"lat_long",F:"elevation",G:"runwayLength",H:"surface",I:"fuel",J:"fbo",K:"latitude",L:"longitude"}},M=require("moment");var k=e.n(M);const F=require("node-fetch");var b=e.n(F);const G=async(e,t,r)=>({ResultSetSize:100,ResultSetOffset:0,QueryGroups:[{QueryRules:[{RuleType:"Simple",Values:[`${t}`],Columns:["Event.EventDate"],Operator:"is on or after",overrideColumn:"",selectedOption:{FieldName:"EventDate",DisplayText:"Event date",Columns:["Event.EventDate"],Selectable:!0,InputType:"Date",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0}},{RuleType:"Simple",Values:[`${r}`],Columns:["Event.EventDate"],Operator:"is on or before",selectedOption:{FieldName:"EventDate",DisplayText:"Event date",Columns:["Event.EventDate"],Selectable:!0,InputType:"Date",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0},overrideColumn:""},{RuleType:"Simple",Values:["Aviation"],Columns:["Event.Mode"],Operator:"is",selectedOption:{FieldName:"Mode",DisplayText:"Investigation mode",Columns:["Event.Mode"],Selectable:!0,InputType:"Dropdown",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0},overrideColumn:""}],AndOr:"and",inLastSearch:!1,editedSinceLastSearch:!1}],AndOr:"and",SortColumn:null,SortDescending:!0,TargetCollection:"cases",SessionId:e}),T=(e,t)=>{if(e)return{companyCode:t.key,companyName:t.name,date:e.date=k()().format("L").toString(),price:e.price,changePoint:e.change_point,changePercentage:e.change_percentage}},I=(e,t)=>{if(!e.articles)return;const r=e.articles.map((e=>((e,t)=>(e.sourceName=e.source.name||"",e.searchKeyword=t,delete e.urlToImage,delete e.source,e))(e,t)));return r},q=e=>{if(!e.icao)return;const t=Object.keys(e);let r={};return t.forEach((t=>{r[t]=`${e[t]}`||""})),r},P=async(e,t)=>{const r=await b()(e,t);return await r.json()},K=async e=>{try{y.info({event:"Service: New news",data:e});const t=await g.insertMany(e,{ordered:!1});return y.info({event:"Service: Records added in Mongo DB",news:t}),t}catch(e){11e3===e.code&&y.info("Service: Record already exists."),y.error(e)}},H=require("fs");var U=e.n(H);const V=require("convert-excel-to-json");var X=e.n(V);const Y=n().Router();Y.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,o=await(async(e,t)=>{try{const r=e||10,n=t-1||0;y.info({event:"Service: New Request Accidents from DB",data:{numberOfRecords:r,currentPage:n}});const o=await E.find().skip(r*n).limit(r);return y.info({event:"Service: Accidents from DB",accidents:o}),{status:"Success",statusCode:200,count:o.length,data:o}}catch(e){y.error(e)}})(r,n);y.info({event:"Controller: Records from DB",result:o}),t.status(o.statusCode).json(o)}));const j=Y,_=n().Router();_.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,o=await(async(e,t)=>{try{const r=e||10,n=t-1||0;y.info({event:"Service: New Request Registrations from DB",data:{numberOfRecords:r,currentPage:n}});const o=await N.find().skip(r*n).limit(r);return y.info({event:"Service: Registrations from DB",registrations:o}),{status:"Success",statusCode:200,count:o.length,data:o}}catch(e){y.error(e)}})(r,n);y.info({event:"Controller: Records from DB",result:o}),t.status(o.statusCode).json(o)}));const x=_,W=n().Router();W.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,o=await(async(e,t)=>{try{const r=e||10,n=t-1||0;y.info({event:"Service: New Request Stocks from DB",data:{numberOfRecords:r,currentPage:n}});const o=await A.find().skip(r*n).limit(r);return y.info({event:"Service: Stocks from DB",stocks:o}),{status:"Success",statusCode:200,count:o.length,data:o}}catch(e){y.error(e)}})(r,n);y.info({event:"Controller: Records from DB",result:o}),t.status(o.statusCode).json(o)}));const $=W,J=n().Router();J.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,o=await(async(e,t)=>{try{const r=e||10,n=t-1||0;y.info({event:"Service: New Request airports from DB",data:{numberOfRecords:r,currentPage:n}});const o=await C.find().skip(r*n).limit(r);return y.info({event:"Service: Airports from DB",airports:o}),{status:"Success",statusCode:200,count:o.length,data:o}}catch(e){y.error(e)}})(r,n);y.info({event:"Controller: Records from DB",result:o}),t.status(o.statusCode).json(o)})),J.route("/create").post((async(e,r)=>{const n=await(async()=>{try{const{columns:e}=w,{formatAirportData:r}=t,n=U().readdirSync("./").map((e=>{const t=e.split(".");if("xlsx"===t[t.length-1])return e})).filter((e=>!!e));if(n.length>1||0===n.length)return{sccess:!1,statusCode:422,error:"There is no file or multiple files. Please keep just 1 *.xslx file."};const o=X()({sourceFile:`./${n[0]}`,columnToKey:e});if(o.Sheet1){const e=o.Sheet1;e.shift();const t=[],n=[];for(let o in e){const a=r(e[o]);a?t.push(a):n.push(e[o])}const a=await C.insertMany(t,{ordered:!1}),s={success:!0,statusCode:200,totalRecords:e.length,success:a.length,failed:n.length,failedRecords:n};return y.info({event:"Service: Records added in MongoDB",data:s}),s}}catch(e){y.error(e)}})();y.info({event:"Controller: Creating new records",result:n}),r.status(n.statusCode).json(n)}));const z=J,Q=n().Router();Q.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,o=await(async(e,t)=>{try{const r=e||10,n=t-1||0;y.info({event:"Service: New Request News from DB",data:{numberOfRecords:r,currentPage:n}});const o=await g.find().skip(r*n).limit(r);return y.info({event:"Service: News from DB",news:o}),{status:"Success",statusCode:200,count:o.length,data:o}}catch(e){y.error(e)}})(r,n);y.info({event:"Controller: Records from DB",result:o}),t.status(o.statusCode).json(o)}));const Z=Q,ee=n().Router();ee.use("/accidents",j),ee.use("/registrations",x),ee.use("/stocks",$),ee.use("/news",Z),ee.use("/airports",z);const te=ee;S().connect(c.mongoose.url).then((()=>{console.log("MongoDB URL => ",c.mongoose.url),y.info("Connected to MongoDB")})).catch((e=>{y.error(e)}));const re=require("node-cron");var ne=e.n(re);const oe=D.scheduler.interval;ne().schedule(oe,(async()=>{y.info("News: Scheduler Started");const e=await(async()=>{try{y.info({event:"Service: Request for News "});const{newsDataUrl:e,keywords:t,requestHeaders:r,requestLanguage:n}=D,o={headers:r},a=t.map((t=>`${e}?q='${t}'&language=${n}`)),s=[];for(let e in a){const r=await P(a[e],o),n=I(r,t[e]);n&&s.push(n)}return y.info({event:"Service: All News",news:s}),s}catch(e){y.error(e)}})()||[];if(y.info({event:"Scheduler: Fetch News",news:e}),e.length>0){for(let t in e)if(e[t].length>0){const r=await K(e[t]);y.info(r)}}else y.info({event:"Scheduler: No news found. :-)"})}));const ae=B.scheduler.interval;ne().schedule(ae,(async()=>{y.info("Accidents: Scheduler Started");const{sessionId:e}=B,t=k()().subtract(1,"months").startOf("month").format("YYYY-MM-DD").toString(),r=k()().subtract(1,"months").endOf("month").format("YYYY-MM-DD").toString(),n=await(async(e,t,r)=>{try{y.info({event:"Service: Request for Accidents ",data:{sessionId:e,startingDate:t,endingDate:r}});const{mainUrl:n,headers:o}=B,a={headers:o,method:"POST",body:JSON.stringify(await G(e,t,r))},s=(e=>{const{models:t}=L;return e.Results.map((e=>(e=>{const{dataKeys:t}=B,r={};return t.forEach((t=>{r[t.dbKey]=e.find((e=>e.FieldName===t.key)).Values[0]||""})),r})(e.Fields))).filter((e=>t.includes(e.model)))})(await P(n,a));return y.info({event:"Service: All Accidents",accidents:s}),s}catch(e){y.error(e)}})(e,t,r);if(y.info({event:"Scheduler: Fetch accidents after all Filters",accidents:n}),n.length>0){const e=await(async e=>{try{y.info({event:"Service: New Accident",data:e});const t=await E.insertMany(e,{ordered:!1});return y.info({event:"Service: Record added in Mongo DB",accident:t}),t}catch(e){11e3===e.code&&y.info("Service: Record already exists."),y.error(e)}})(n)||[];y.info(e)}else y.info({event:"Scheduler: No new accidents found. :-)"})}));const se=B.scheduler.interval;ne().schedule(se,(async()=>{y.info("Company Stocks: Scheduler Started");const e=await(async()=>{try{y.info({event:"Service: Request for Company Stocks "});let{stonkApiUrl:e,stonkApiHeaders:t,companies:r}=O;const n={headers:t},o=[],a=r.map((t=>e+t.key));for(let e in a){const t=await P(a[e],n),s=T(t,r[e]);o.push(s)}return y.info({event:`Service: All company stocks for ${k()().format("L").toString()}`,companyStocks:o}),o}catch(e){y.error(e)}})()||[];if(y.info({event:"Scheduler: Fetch company stocks",companyStocks:e}),e.length>0){const t=await(async e=>{try{y.info({event:"Service: New Accident",data:e});const t=await A.insertMany(e);return y.info({event:"Service: Records added in Mongo DB",companyStocks:t}),t}catch(e){11e3===e.code&&y.info("Service: Record already exists."),y.error(e)}})(e);y.info(t)}else y.info({event:"Scheduler: No company stocks found. :-)"})}));const ie=n()();ie.use(i()()),setInterval((()=>{a().get("http://healthcheck-backend-888c77da0ba5.herokuapp.com/"),console.log("App is alive!")}),12e5),ie.use("/aircraft",te),ie.get("/",((e,t)=>{t.send("Welcome to Healthcheck App!")}));const ce=c.port;ie.listen(ce,(()=>{y.info(`App is running on port ${ce}`)}))})();