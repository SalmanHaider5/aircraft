(()=>{"use strict";var e={n:t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{formatAirportData:()=>q});const r=require("express");var n=e.n(r);const a=require("cors");var o=e.n(a);require("dotenv/config");const i={mongoose:{url:`${process.env.MONGO_URL}${process.env.DB_NAME}`},environment:process.env.ENVIRONMENT,port:process.env.PORT,rapidApi:{key:process.env.RAPID_API_KEY,host:process.env.RAPID_API_HOST},newsDataApi:{key:process.env.NEWS_DATA_API_KEY}},s=require("winston");var c=e.n(s);const l=c().format((e=>(e instanceof Error&&Object.assign(e,{message:e.stack}),e))),d=(c().format.combine(c().format.colorize(),c().format.timestamp(),c().format.align(),c().format.printf((e=>`${JSON.stringify(e)}`))),c().createLogger({level:"development"===i.environment?"debug":"info",format:c().format.combine(l(),"development"===i.environment?c().format.colorize():c().format.uncolorize(),c().format.prettyPrint(),c().format.splat(),c().format.json(),c().format.printf((({level:e,message:t})=>`${e}: ${"object"==typeof t?JSON.stringify(t):t}`))),transports:[new(c().transports.Console)({stderrLevels:["error","info"]})]})),u=require("cheerio"),y=require("mongoose");var p=e.n(y);const m=new(p().Schema)({searchKeyword:{type:String,require:!0},title:{type:String,unique:!0,maxLength:1024},content:{type:String,maxLength:1024},url:{type:String,maxLength:1024},description:{type:String,maxLength:1024},category:{type:String},language:{type:String},author:{type:String},publishedAt:{type:String},sourceName:{type:String}}),S=p().model("News",m),g=new(p().Schema)({companyCode:{type:String,require:!0,unique:!0},companyName:{type:String,require:!0,unique:!0},price:{type:Number},changePoint:{type:Number},changePercentage:{type:Number},date:{type:String}}),f=p().model("Stocks",g),v=new(p().Schema)({icao:{type:String,require:!0,unique:!0},airportName:{type:String},city:{type:String},country:{type:String},lat_long:{type:String},elevation:{type:String},runwayLength:{type:String},surface:{type:String},fuel:{type:String},fbo:{type:String},lat:{type:String},lng:{type:String}}),A=p().model("Airports",v),h=new(p().Schema)({ntsbNo:{type:String,require:!0,unique:!0},completionStatus:{type:String},eventType:{type:String},city:{type:String},state:{type:String},country:{type:String},reportNo:{type:String},nNumber:{type:String},make:{type:String},model:{type:String},highestInjuryLevel:{type:String},hasSafetyRec:{type:String},mode:{type:String},reportType:{type:String},ReportDate:{type:String}}),C=p().model("Accidents",h),R=new(p().Schema)({regNumber:{type:String,require:!0,unique:!0},serialNumber:{type:String},model:{type:String},mfrYear:{type:String},typeRegistration:{type:String},status:{type:String},certificateIssueDate:{type:String},typeEngine:{type:String},modelSCodebase8:{type:String},modelSCodebase16:{type:String},fractionalOwner:{type:String},registeredOwnerName:{type:String},registeredOwnerStreet:{type:String},registeredOwnerCity:{type:String},registeredOwnerState:{type:String},registeredOwnerZipCode:{type:String},registeredOwnerCountry:{type:String},engineManufacturer:{type:String},engineModel:{type:String},awDate:{type:String}}),E=p().model("Registrations",R),N={scheduler:{interval:"0 8 * * *"},home_url:"https://registry.faa.gov/aircraftinquiry/Search/RecentRegistrationResult",registration_url:"https://registry.faa.gov/aircraftinquiry/Search/NNumberResult?NNumberTxt=",url_headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"},models:["FALCON 10","MYSTERE-FALCON 20-C5","MYSTERE FALCON 900","FALCON 50","MYSTERE FALCON 50","CL-600-2C10","BD-100-1A10","BD-700-1A10","BD-700-1A11","BD-100-1A10","CL-600-2B16","CL-600-2A12","CL-600-2B19","CL-600-2B16(CL-604)","CL-600-2D24","BD-700-1A10","BD-700-2A12","CL-600-2C10","CL-600-2B16(CL601-3R","CL-600-2C11","CL600-2B16 (CL601-3A","CL-600-2B16 (CL-605)","CL-600-2E25","CL-215-6B11 (CL-415)","CL-600-2B19","CL-600-2B16","525C","510","560","525A","560XL","525","550","650","525B","501","680","500","750","551","560XLS","525B","525","525C","560XLS+","560XL","680A","680A","SF50","EX18","SF50","FALCON 900 EX","MYSTERE FALCON 50EX","FALCON 2000EX","FALCON 20 F","FALCON 50EX","MYSTERE-FALCON 50","FALCON 2000EX","FALCON 2000","FALCON 900EX","MYSTERE FALCON 900","FALCON 7X","FALCON 900B","FALCON 900","MYSTERE FALCON 20","FALCON 20-F5","MYSTERE-FALCON 20-F5","FALCON 900EX EASY","FALCON 20G","FALCON 900DX","FALCON 50","FALCON 20-D","FALCON 10","MYSTERE FALCON 900","FALCON 50","MYSTERE FALCON 20-F5","FALCON 20","MYSTERE FALCON 20-C5","MYSTERE FALCON 200","MYSTERE FALCON 20-D5","FAN JET FALCON SER F","FAN JET FALCON SER E","FAN JET FALCON","MYSTERE FALCON 20","FAN JET FALCON SER D","MYSTERE FALCON 900B","EA500","EA500","500","EMB-500","EMB-500","EMB-505","EMB-545","EMB-550","EMB-505","EMB-545","EMB-545 LR","EMB-135BJ","EMB-500","EMB-550","EMB-550","ERJ 190 AR","25B","24D","35","28","24E","36A","24F","25","24B","24B-A","24C","24D-A","25C","25F","29","36","25D","55","55B","55C","24","35A","35A (C-21A)","G-IV","GIV-X (G450)","695B","GV-SP (G550)","G-V","G-1159A","840","C-20A","G-IV (G400)","G1159B","GULFSTREAM 200","G-IV (G350)","GV-SP","GIV-X (G350)","GIV-X","G-IV (G300)","GV-SP (G500)","695A","G-III","GVII-G500","GVII-G600","GVII-G500","GVI (G650ER)","GV-SP (G550)","GVII-G600","GVI","GVI (G650)","GVII-G400","GVIII-G800","GVIII-G700","GULFSTREAM 200","G150","G100","GULFSTREAM 100","695A","690D","690C","695","GA-7","G-1159A","G-1159","HAWKER 900XP","HAWKER 900XP","C90GTI","C90GTI","390","390","B200","B200","400A","400A","B200GT","B200GT","G58","G58","4000","4000","B300C","B300C","B300","B300","HAWKER 4000","HAWKER 4000","HAWKER 850XP","HAWKER 850XP","HAWKER 750","HAWKER 750","C90GT","C90GT","HAWKER 800XP","HAWKER 800XP","HS.125 SERIES 700A","DH.125-3A/RA","BH.125-400A","DH.125-400A","HS 125-3A","HS-125 SERIES F-400","HA-420","HA-420","HA-420","GULFSTREAM G280","GULFSTREAM G150","GULFSTREAM G280","GULFSTREAM 200","1125 WESTWIND ASTRA","35A","60","45","31A","35A","24D","60 XR","23","24B","55","24","24A","31","25D","25","35","C-21A","MU-2B","MU-2B-25","MU-2B-60","MU-2B-40","MU-2B-20","MU-2B-36A","MU-300","MU-2B-26","MU-2B-36","TYPE ZERO","MU-2B-26A","MU-2B-35","PC-24"]},w={scheduler:{interval:"0 15 * * *"},sessionId:480529,mainUrl:"https://data.ntsb.gov/carol-main-public/api/Query/Main",headers:{"content-type":"application/json"},dataKeys:[{key:"NtsbNo",dbKey:"ntsbNo"},{key:"CompletionStatus",dbKey:"completionStatus"},{key:"EventType",dbKey:"eventType"},{key:"City",dbKey:"city"},{key:"State",dbKey:"state"},{key:"Country",dbKey:"country"},{key:"ReportNo",dbKey:"reportNo"},{key:"N#",dbKey:"nNumber"},{key:"VehicleMake",dbKey:"make"},{key:"VehicleModel",dbKey:"model"},{key:"HighestInjuryLevel",dbKey:"highestInjuryLevel"},{key:"HasSafetyRec",dbKey:"hasSafetyRec"},{key:"Mode",dbKey:"mode"},{key:"ReportType",dbKey:"reportType"},{key:"ReportDate",dbKey:"ReportDate"}]},b={scheduler:{interval:"30 23 * * *"},stonkApiUrl:"https://realstonks.p.rapidapi.com/",stonkApiHeaders:{"X-RapidAPI-Key":`${i.rapidApi.key}`,"X-RapidAPI-Host":"realstonks.p.rapidapi.com"},companies:[{key:"GD",name:"General Dynamic"},{key:"TXT",name:"Textron"},{key:"BDRAF",name:"Bombardier"},{key:"ERF",name:"Embraer"},{key:"DUAVF",name:"Dassault Aviation"},{key:"UP",name:"Wheels Up"},{key:"EADSF",name:"Airbus"},{key:"BA",name:"Boeing"},{key:"BP",name:"BP PLC"},{key:"NTOIF",name:"Neste OYJ"},{key:"SHEL",name:"Shell PLC"},{key:"HON",name:"Honeywell "},{key:"GE",name:"General Electric"},{key:"RYCEF",name:"Rolls-Royce"},{key:"WMB",name:"Williams International"},{key:"COL",name:"Rockwell Collins"}]},L={scheduler:{interval:"0 10,14,18 * * *"},newsDataUrl:"https://newsomaticapi.p.rapidapi.com/top",requestHeaders:{"X-RapidAPI-Key":`${i.rapidApi.key}`,"X-RapidAPI-Host":"newsomaticapi.p.rapidapi.com"},requestLanguage:"en",keywords:["private jet","business jet","private aviation","bombardier","dassault falcon","gulfstream","learjet","cessna citation","embraer legacy","embraer praetor","embraer phenom","embraer lineage","hondajet","nextant","pilatus pc-24","textron"]},O={columns:{A:"icao",B:"airportName",C:"city",D:"country",E:"lat_long",F:"elevation",G:"runwayLength",H:"surface",I:"fuel",J:"fbo",K:"latitude",L:"longitude"}},D=require("moment");var B=e.n(D);const M=require("node-fetch");var F=e.n(M);const T=async e=>B()(e,"L").subtract(1,"days").format("L").toString(),k=async(e,t,r)=>({ResultSetSize:100,ResultSetOffset:0,QueryGroups:[{QueryRules:[{RuleType:"Simple",Values:[`${t}`],Columns:["Event.EventDate"],Operator:"is on or after",overrideColumn:"",selectedOption:{FieldName:"EventDate",DisplayText:"Event date",Columns:["Event.EventDate"],Selectable:!0,InputType:"Date",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0}},{RuleType:"Simple",Values:[`${r}`],Columns:["Event.EventDate"],Operator:"is on or before",selectedOption:{FieldName:"EventDate",DisplayText:"Event date",Columns:["Event.EventDate"],Selectable:!0,InputType:"Date",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0},overrideColumn:""},{RuleType:"Simple",Values:["Aviation"],Columns:["Event.Mode"],Operator:"is",selectedOption:{FieldName:"Mode",DisplayText:"Investigation mode",Columns:["Event.Mode"],Selectable:!0,InputType:"Dropdown",RuleType:0,Options:null,TargetCollection:"cases",UnderDevelopment:!0},overrideColumn:""}],AndOr:"and",inLastSearch:!1,editedSinceLastSearch:!1}],AndOr:"and",SortColumn:null,SortDescending:!0,TargetCollection:"cases",SessionId:e}),G=(e,t)=>{if(e)return{companyCode:t.key,companyName:t.name,date:e.date=B()().format("L").toString(),price:e.price,changePoint:e.change_point,changePercentage:e.change_percentage}},I=(e,t)=>{if(!e.articles)return;const r=e.articles.map((e=>((e,t)=>(e.sourceName=e.source.name||"",e.searchKeyword=t,delete e.urlToImage,delete e.source,e))(e,t)));return r},q=e=>{if(!e.icao)return;const t=Object.keys(e);let r={};return t.forEach((t=>{r[t]=`${e[t]}`||""})),r},P=async(e,t)=>{const r=await F()(e,t);return await r.text()},x=async(e,t)=>{const r=await F()(e,t);return await r.json()},K=async e=>{try{d.info({event:"Service: Request for Registrations for Specific Page",pageNumber:e});const{home_url:t,url_headers:r}=N,n={headers:r},a=`${t}?Sort_Option=5&Page=${e}`;d.info({event:"Service: Request for Registrations for Specific Page",data:{url:a,pageNumber:e,options:n}});const o=await P(a,n),i=await(async e=>{const{models:t}=N;let r=[];const n=u.load(e);return n(".devkit-table-row").each(((e,t)=>{if(0!==e){const e=n(t).find("td"),a={nNumber:n(e[0]).text().trim(),model:n(e[3]).text().trim(),certIssueDate:n(e[4]).text().trim()};r.push(a)}})),r})(o);return d.info({event:"Service: All Registrations for Specific Page",registrations:i}),i}catch(e){d.error(e)}},H=async e=>{try{d.info({event:"Service: New news",data:e});const t=await S.insertMany(e,{ordered:!1});return d.info({event:"Service: Records added in Mongo DB",news:t}),t}catch(e){11e3===e.code&&d.info("Service: Record already exists."),d.error(e)}},U=require("fs");var Y=e.n(U);const V=require("convert-excel-to-json");var X=e.n(V);const _=n().Router();_.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,a=await(async(e,t)=>{try{const r=e||10,n=t-1||0;d.info({event:"Service: New Request Accidents from DB",data:{numberOfRecords:r,currentPage:n}});const a=await C.find().skip(r*n).limit(r);return d.info({event:"Service: Accidents from DB",accidents:a}),{status:"Success",statusCode:200,count:a.length,data:a}}catch(e){d.error(e)}})(r,n);d.info({event:"Controller: Records from DB",result:a}),t.status(a.statusCode).json(a)}));const j=_,W=n().Router();W.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,a=await(async(e,t)=>{try{const r=e||10,n=t-1||0;d.info({event:"Service: New Request Registrations from DB",data:{numberOfRecords:r,currentPage:n}});const a=await E.find().skip(r*n).limit(r);return d.info({event:"Service: Registrations from DB",registrations:a}),{status:"Success",statusCode:200,count:a.length,data:a}}catch(e){d.error(e)}})(r,n);d.info({event:"Controller: Records from DB",result:a}),t.status(a.statusCode).json(a)}));const $=W,J=n().Router();J.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,a=await(async(e,t)=>{try{const r=e||10,n=t-1||0;d.info({event:"Service: New Request Stocks from DB",data:{numberOfRecords:r,currentPage:n}});const a=await f.find().skip(r*n).limit(r);return d.info({event:"Service: Stocks from DB",stocks:a}),{status:"Success",statusCode:200,count:a.length,data:a}}catch(e){d.error(e)}})(r,n);d.info({event:"Controller: Records from DB",result:a}),t.status(a.statusCode).json(a)}));const z=J,Z=n().Router();Z.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,a=await(async(e,t)=>{try{const r=e||10,n=t-1||0;d.info({event:"Service: New Request airports from DB",data:{numberOfRecords:r,currentPage:n}});const a=await A.find().skip(r*n).limit(r);return d.info({event:"Service: Airports from DB",airports:a}),{status:"Success",statusCode:200,count:a.length,data:a}}catch(e){d.error(e)}})(r,n);d.info({event:"Controller: Records from DB",result:a}),t.status(a.statusCode).json(a)})),Z.route("/create").post((async(e,r)=>{const n=await(async()=>{try{const{columns:e}=O,{formatAirportData:r}=t,n=Y().readdirSync("./").map((e=>{const t=e.split(".");if("xlsx"===t[t.length-1])return e})).filter((e=>!!e));if(n.length>1||0===n.length)return{sccess:!1,statusCode:422,error:"There is no file or multiple files. Please keep just 1 *.xslx file."};const a=X()({sourceFile:`./${n[0]}`,columnToKey:e});if(a.Sheet1){const e=a.Sheet1;e.shift();const t=[],n=[];for(let a in e){const o=r(e[a]);o?t.push(o):n.push(e[a])}const o=await A.insertMany(t,{ordered:!1}),i={success:!0,statusCode:200,totalRecords:e.length,success:o.length,failed:n.length,failedRecords:n};return d.info({event:"Service: Records added in MongoDB",data:i}),i}}catch(e){d.error(e)}})();d.info({event:"Controller: Creating new records",result:n}),r.status(n.statusCode).json(n)}));const Q=Z,ee=n().Router();ee.route("/").get((async(e,t)=>{const r=e.query.records,n=e.query.page,a=await(async(e,t)=>{try{const r=e||10,n=t-1||0;d.info({event:"Service: New Request News from DB",data:{numberOfRecords:r,currentPage:n}});const a=await S.find().skip(r*n).limit(r);return d.info({event:"Service: News from DB",news:a}),{status:"Success",statusCode:200,count:a.length,data:a}}catch(e){d.error(e)}})(r,n);d.info({event:"Controller: Records from DB",result:a}),t.status(a.statusCode).json(a)}));const te=ee,re=n().Router();re.use("/accidents",j),re.use("/registrations",$),re.use("/stocks",z),re.use("/news",te),re.use("/airports",Q);const ne=re;p().connect(i.mongoose.url).then((()=>{d.info("Connected to MongoDB")})).catch((e=>{d.error(e)}));const ae=require("node-cron");var oe=e.n(ae);const ie=L.scheduler.interval;oe().schedule(ie,(async()=>{d.info("News Scheduler Started");const e=await(async()=>{try{d.info({event:"Service: Request for News "});const{newsDataUrl:e,keywords:t,requestHeaders:r,requestLanguage:n}=L,a={headers:r},o=t.map((t=>`${e}?q='${t}'&language=${n}`)),i=[];for(let e in o){const r=await x(o[e],a),n=I(r,t[e]);n&&i.push(n)}return d.info({event:"Service: All News",news:i}),i}catch(e){d.error(e)}})()||[];if(d.info({event:"Scheduler: Fetch News",news:e}),e.length>0){for(let t in e)if(e[t].length>0){const r=await H(e[t]);d.info(r)}}else d.info({event:"Scheduler: No news found. :-)"})}));const se=w.scheduler.interval;oe().schedule(se,(async()=>{d.info("Scheduler Started");const{sessionId:e}=w,t=B()().subtract(1,"months").startOf("month").format("YYYY-MM-DD").toString(),r=B()().subtract(1,"months").endOf("month").format("YYYY-MM-DD").toString(),n=await(async(e,t,r)=>{try{d.info({event:"Service: Request for Accidents ",data:{sessionId:e,startingDate:t,endingDate:r}});const{mainUrl:n,headers:a}=w,o={headers:a,method:"POST",body:JSON.stringify(await k(e,t,r))},i=(e=>{const{models:t}=N;return e.Results.map((e=>(e=>{const{dataKeys:t}=w,r={};return t.forEach((t=>{r[t.dbKey]=e.find((e=>e.FieldName===t.key)).Values[0]||""})),r})(e.Fields))).filter((e=>t.includes(e.model)))})(await x(n,o));return d.info({event:"Service: All Accidents",accidents:i}),i}catch(e){d.error(e)}})(e,t,r);if(d.info({event:"Scheduler: Fetch accidents after all Filters",accidents:n}),n.length>0){const e=await(async e=>{try{d.info({event:"Service: New Accident",data:e});const t=await C.insertMany(e,{ordered:!1});return d.info({event:"Service: Record added in Mongo DB",accident:t}),t}catch(e){11e3===e.code&&d.info("Service: Record already exists."),d.error(e)}})(n)||[];d.info(e)}else d.info({event:"Scheduler: No new accidents found. :-)"})}));const ce=N.scheduler.interval,le=async()=>{let e=[],t=!1,r=await(async()=>{try{const{home_url:e,url_headers:t}=N,r={headers:t};d.info({event:"Service: Request for Pagination to Check Page",data:{url:e,options:r}});const n=await P(e,r),a=u.load(n)(".pagination2center p").text().trim(),o=await(async e=>{const t=e.split(" ");return parseInt(t[t.length-1].split(")")[0])})(a);return d.info({event:"Service: Last Page Number",pageNumber:o}),o}catch(e){d.error(e)}})();d.info({event:"Scheduler: Fetch Last Page",previousDate:a,lastPage:r});let n=r,a="";for(;!t;){const o=await K(n);if(n===r){const e=o[o.length-1].certIssueDate;a=await T(e)}n-=1,t=!!o.find((e=>e.certIssueDate===a)),e=[...e,...o]}d.info({event:"Scheduler: Fetch All Registrations",allRegistrations:e});const o=await(async(e,t)=>e.filter((e=>e.certIssueDate!==t)))(e,a);d.info({event:"Scheduler: Filtered Registrations with Date",latestRegistrations:o});const i=await(async e=>{const{models:t}=N;let r=[];return e.forEach((e=>{t.includes(e.model)&&r.push(e.nNumber)})),r})(o);return d.info({event:"Scheduler: Filtered Registrations with Models",filteredRegistrations:i}),i};oe().schedule(ce,(async()=>{d.info("Scheduler Started");const e=await le()||[];d.info({event:"Scheduler: Fetch Registrations after all Filters",registrations:e}),e.length>0?e.forEach((async e=>{const t=await(async e=>{try{const{registration_url:t,url_headers:r}=N,n={headers:r},a=t+e;d.info({event:"Service: Request for Registration Detail for N-Number",data:{url:a,nNumber:e,options:n}});const o=await P(a,n),i=await(async(e,t)=>{const r=u.load(t);return{regNumber:e,serialNumber:r('td[data-label="Serial Number"]').first().text().trim()||"",model:r('td[data-label="Model"]').first().text().trim()||"",mfrYear:r('td[data-label="Mfr Year"]').first().text().trim()||"",typeRegistration:r('td[data-label="Type Registration"]').first().text().trim()||"",status:r('td[data-label="Status"]').first().text().trim()||"",certificateIssueDate:r('td[data-label="Certificate Issue Date"]').first().text().trim()||"",typeEngine:r('td[data-label="Engine Type"]').first().text().trim()||"",modelSCodebase8:r('td[data-label="Mode S Code (Base 8 / oct)"]').first().text().trim()||"",modelSCodebase16:r('td[data-label="Mode S Code (Base 16 / Hex)"]').first().text().trim()||"",fractionalOwner:r('td[data-label="Fractional Owner"]').first().text().trim()||"",registeredOwnerName:r('td[data-label="Name"][colspan="3"]').first().text().trim()||"",registeredOwnerStreet:r('td[data-label="Street"]').first().text().trim()||"",registeredOwnerCity:r('td[data-label="City"]').first().text().trim()||"",registeredOwnerState:r('td[data-label="State"]').first().text().trim()||"",registeredOwnerZipCode:r('td[data-label="Zip Code"]').first().text().trim()||"",registeredOwnerCountry:r('td[data-label="Country"]').first().text().trim()||"",engineManufacturer:r('td[data-label="Engine Manufacturer"]').first().text().trim()||"",engineModel:r('td[data-label="Engine Model"]').first().text().trim()||"",awDate:r('td[data-label="A/W Date"]').first().text().trim()||""}})(e,o);return d.info({event:"Service: Registration Detail for N-Number",record:i}),i}catch(e){d.error(e)}})(e),r=await(async e=>{try{d.info({event:"Service: New Registration",data:e});const t=await E.create(e);return d.info({event:"Service: Record added in Mongo DB",registration:t}),t}catch(e){11e3===e.code&&d.info("Service: Record already exists."),d.error(e)}})(t);d.info(r)})):d.info({event:"Scheduler: No new registrations found. :-)"})}));const de=w.scheduler.interval;oe().schedule(de,(async()=>{d.info("Scheduler Started");const e=await(async()=>{try{d.info({event:"Service: Request for Company Stocks "});let{stonkApiUrl:e,stonkApiHeaders:t,companies:r}=b;const n={headers:t},a=[],o=r.map((t=>e+t.key));for(let e in o){const t=await x(o[e],n),i=G(t,r[e]);a.push(i)}return d.info({event:`Service: All company stocks for ${B()().format("L").toString()}`,companyStocks:a}),a}catch(e){d.error(e)}})()||[];if(d.info({event:"Scheduler: Fetch company stocks",companyStocks:e}),e.length>0){const t=await(async e=>{try{d.info({event:"Service: New Accident",data:e});const t=await f.insertMany(e);return d.info({event:"Service: Records added in Mongo DB",companyStocks:t}),t}catch(e){11e3===e.code&&d.info("Service: Record already exists."),d.error(e)}})(e);d.info(t)}else d.info({event:"Scheduler: No company stocks found. :-)"})}));const ue=n()();ue.use(o()()),ue.use("/aircraft",ne);const ye=i.port;ue.listen(ye,(()=>{d.info(`App is running on port ${ye}`)}))})();